ninja_required_version = 1.5

build_dir = build
target_dir = bin

########################################

commonflags = -O3 -march=native -pipe -Wall -Wextra -Wconversion -Wpedantic -Wno-sign-compare -fPIC -flto -s
cxxflags = -std=c++17 $commonflags
cflags = -std=c11 $commonflags
linkflags = -pie

rustflags = --edition 2018 --crate-type cdylib -C opt-level=3 -C incremental=$build_dir

rule cc
    description = Compiling $in
    command = c++ $cxxflags -MMD -MF $out.d -c -o $out $in
    depfile = $out.d

rule cclink
    description = Linking $in
    command = c++ $cxxflags $linkflags -o $out $in $libs

rule c
    description = Compiling $in
    command = cc $cflags -MMD -MF $out.d -c -o $out $in
    depfile = $out.d

rule clink
    description = Linking $in
    command = cc $cflags $linkflags -o $out $in $libs

rule rustc
    description = Compiling $in
    command = rustc $rustflags $main -o $out


########################################

rule run
    command = ./$in
    pool = console
    description = Running $in

########################################

build $target_dir/main.x: cclink $build_dir/main.o $build_dir/Plugin.o
    linkflags = $linkflags -Wl,--enable-new-dtags,-rpath="\$$ORIGIN",-rpath="\$$ORIGIN/lib"
    libs = -ldl
build $build_dir/main.o: cc src/main.cxx
build $build_dir/Plugin.o: cc src/Plugin.cc
default $target_dir/main.x

build $target_dir/baz.so: cclink $build_dir/baz.o
    linkflags = $linkflags -shared
build $build_dir/baz.o: cc src/baz.cxx
build baz.so: phony $target_dir/baz.so
default $target_dir/baz.so

build $target_dir/foo.so: cclink $build_dir/foo.o
    linkflags = $linkflags -shared
build $build_dir/foo.o: cc src/foo.cxx
build foo.so: phony $target_dir/foo.so
default $target_dir/foo.so

build $target_dir/bar.so: clink $build_dir/bar.o
    linkflags = $linkflags -shared
build $build_dir/bar.o: c src/bar.c
build bar.so: phony $target_dir/bar.so
default $target_dir/bar.so

build $target_dir/rust.so: rustc src/rust.rs
    main = src/rust.rs
build rust.so: phony $target_dir/rust.so
default $target_dir/rust.so

build $target_dir/lua.so: clink $build_dir/lua.o
    linkflags = $linkflags -shared
    libs = -lluajit-5.1 -llua5.1
build $build_dir/lua.o: c src/lua.c
    cflags = $cflags -lluajit -llua5.1
build lua.so: phony $target_dir/lua.so
default $target_dir/lua.so

########################################

build run: run $target_dir/main.x $target_dir/baz.so foo.so bar.so rust.so lua.so
